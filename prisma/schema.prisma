// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  name        String
  email       String        @unique
  password    String
  role        Role          @default(USER)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  foundItem   FoundItem[]
  claim       Claim[]
  userProfile UserProfile[]
  lostItem    LostItem[]

  @@map("user")
}

model FoundItemCategory {
  id        String      @id @default(uuid())
  name      String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  FoundItem FoundItem[]

  @@map("foundItemCategory")
}

model LostItem {
  id           String      @id @default(uuid())
  userId       String
  itemCategory String
  description  String
  date         String
  location     String
  foundStatus  FoundStatus @default(NOTFOUND)
  phone        String
  email        String
  image        String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  user         User        @relation(fields: [userId], references: [id])
}

model FoundItem {
  id                  String             @id @default(uuid())
  userId              String
  foundItemName       String
  itemCategory        String
  description         String
  date                String
  location            String
  phone               String
  image               String
  email               String
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  user                User               @relation(fields: [userId], references: [id])
  claim               Claim[]
  FoundItemCategory   FoundItemCategory? @relation(fields: [foundItemCategoryId], references: [id])
  foundItemCategoryId String?

  @@map("foundItem")
}

model Claim {
  id                     String      @id @default(uuid())
  userId                 String
  foundItemId            String
  status                 ClaimStatus @default(PENDING)
  distinguishingFeatures String
  lostDate               DateTime
  createdAt              DateTime    @default(now())
  updatedAt              DateTime    @updatedAt
  user                   User        @relation(fields: [userId], references: [id])
  foundItem              FoundItem   @relation(fields: [foundItemId], references: [id])

  @@map("claim")
}

model UserProfile {
  id        String   @id @default(uuid())
  userId    String
  bio       String
  age       Int
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  @@map("profile")
}

enum ClaimStatus {
  PENDING
  APPROVED
  REJECTED
}

enum FoundStatus {
  FOUND
  NOTFOUND
}

enum Role {
  USER
  ADMIN
}
